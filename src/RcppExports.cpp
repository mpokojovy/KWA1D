// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// KWA_loc_
double KWA_loc_(const Rcpp::NumericVector& x, double bw);
RcppExport SEXP _KWA1D_KWA_loc_(SEXP xSEXP, SEXP bwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type bw(bwSEXP);
    rcpp_result_gen = Rcpp::wrap(KWA_loc_(x, bw));
    return rcpp_result_gen;
END_RCPP
}
// KWA_scale_
double KWA_scale_(const Rcpp::NumericVector x, double df, double bw_loc, double bw_scale);
RcppExport SEXP _KWA1D_KWA_scale_(SEXP xSEXP, SEXP dfSEXP, SEXP bw_locSEXP, SEXP bw_scaleSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type bw_loc(bw_locSEXP);
    Rcpp::traits::input_parameter< double >::type bw_scale(bw_scaleSEXP);
    rcpp_result_gen = Rcpp::wrap(KWA_scale_(x, df, bw_loc, bw_scale));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_KWA1D_KWA_loc_", (DL_FUNC) &_KWA1D_KWA_loc_, 2},
    {"_KWA1D_KWA_scale_", (DL_FUNC) &_KWA1D_KWA_scale_, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_KWA1D(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
